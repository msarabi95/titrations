# AUTOGENERATED! DO NOT EDIT! File to edit: ../../conditions/hfref.ipynb.

# %% auto 0
__all__ = ['beta_blocker_class', 'metoprolol_succinate', 'carvedilol', 'bisoprolol', 'beta_blocker_ladder', 'no_pacemaker',
           'hypotension', 'bradycardia', 'decompensation', 'symptoms', 'av_block', 'raasi_class',
           'sacubitril_valsartan', 'lisinopril', 'losartan', 'raasi_ladder', 'low_egfr', 'hyperkalemia', 'sglt2i_class',
           'dapagliflozin', 'empagliflozin', 'sglt2i_ladder', 'severe_gu_infxns', 'has_type_1_diabetes',
           'has_type_2_diabetes_on_insulin', 'mra_class', 'spironolactone', 'eplerenone', 'mra_ladder',
           'BetaBlockerTitrator', 'RAASiTitrator', 'SGLT2iTitrator', 'MRATitrator']

# %% ../../conditions/hfref.ipynb 1
from ..basics import *
from ..titrations2 import *

# %% ../../conditions/hfref.ipynb 4
beta_blocker_class = MedicationClass("Beta Blocker")

metoprolol_succinate = Ingredient("metoprolol succinate", beta_blocker_class)
carvedilol = Ingredient("carvedilol", beta_blocker_class)
bisoprolol = Ingredient("bisoprolol", beta_blocker_class)

beta_blocker_ladder = DosingLadder({
    metoprolol_succinate.name: [
        Medication(metoprolol_succinate, "12.5 mg", "PO", "daily"),
        Medication(metoprolol_succinate, "25 mg", "PO", "daily"),
        Medication(metoprolol_succinate, "50 mg", "PO", "daily"),
        Medication(metoprolol_succinate, "100 mg", "PO", "daily"),
    ],
    carvedilol.name: [
        Medication(carvedilol, "3.125 mg", "PO", "BID"),
        Medication(carvedilol, "6.25 mg", "PO", "BID"),
        Medication(carvedilol, "12.5 mg", "PO", "BID"),
        Medication(carvedilol, "25 mg", "PO", "BID"),
    ],
    bisoprolol.name: [
        Medication(bisoprolol, "1.25 mg", "PO", "BID"),
        Medication(bisoprolol, "2.5 mg", "PO", "BID"),
        Medication(bisoprolol, "5 mg", "PO", "BID"),
        Medication(bisoprolol, "10 mg", "PO", "BID"),
    ]
})

# %% ../../conditions/hfref.ipynb 6
no_pacemaker = Rule('has_pacemaker', 'eq', False)

hypotension = TitrationLimitingRule('SBP', 'lt', 100)
bradycardia = ConditionTitrationLimitingRule('HR' , 'lt', 60, condition=no_pacemaker)
decompensation = TitrationLimitingRule('decompensated', 'eq', True)
symptoms = TitrationLimitingRule('symptomatic', 'eq', True)
av_block = TitrationLimitingRule('av_block', 'eq', True)

# %% ../../conditions/hfref.ipynb 8
class BetaBlockerTitrator(Titrator):
    dosing_ladder = beta_blocker_ladder
    rules = [
        hypotension,
        bradycardia,
        decompensation,
        symptoms,
        av_block,
    ]

# %% ../../conditions/hfref.ipynb 11
raasi_class = MedicationClass("RAASi")

sacubitril_valsartan = Ingredient("sacubitril/valsartan", raasi_class)
lisinopril = Ingredient("lisinopril", raasi_class)
losartan = Ingredient("losartan", raasi_class)

raasi_ladder = DosingLadder({
    sacubitril_valsartan.name: [
        # NOTE: the lengths of these subladders are unequal
        Medication(sacubitril_valsartan, "24-26 mg", "PO", "BID"),
        Medication(sacubitril_valsartan, "49-51 mg", "PO", "BID"),
        Medication(sacubitril_valsartan, "97-103 mg", "PO", "BID"),
    ],
    lisinopril.name: [
        Medication(lisinopril, "5 mg", "PO", "daily"),
        Medication(lisinopril, "10 mg", "PO", "daily"),
        Medication(lisinopril, "20 mg", "PO", "daily"),
        Medication(lisinopril, "40 mg", "PO", "daily"),
    ],
    losartan.name: [
        Medication(losartan, "12.5 mg", "PO", "daily"),
        Medication(losartan, "25 mg", "PO", "daily"),
        Medication(losartan, "50 mg", "PO", "daily"),
        Medication(losartan, "100 mg", "PO", "daily"),
    ]
})

# %% ../../conditions/hfref.ipynb 13
low_egfr = TitrationLimitingRule('eGFR', 'lt', 30)
hyperkalemia = TitrationLimitingRule('K', 'gt', 5)
hypotension
symptoms
# angioedema = ClassLimitingRule()  # TODO

# %% ../../conditions/hfref.ipynb 15
class RAASiTitrator(Titrator):
    dosing_ladder = raasi_ladder
    rules = [
        low_egfr,
        hyperkalemia,
        hypotension,
        symptoms,
        # angioedema,
    ]

# %% ../../conditions/hfref.ipynb 18
sglt2i_class = MedicationClass("SGLT2i")

dapagliflozin = Ingredient("dapagliflozin", sglt2i_class)
empagliflozin = Ingredient("empagliflozin", sglt2i_class)

sglt2i_ladder = DosingLadder({
    dapagliflozin.name: [
        Medication(dapagliflozin, "10 mg", "PO", "daily"),
    ],
    empagliflozin.name: [
        Medication(empagliflozin, "12.5 mg", "PO", "daily"),
    ],
})

# %% ../../conditions/hfref.ipynb 20
low_egfr # this is the same rule as above, this is an example of reusing a rule
severe_gu_infxns = ClassLimitingRule('severe_gu_infxns', 'eq', True)
has_type_1_diabetes = ClassLimitingRule('has_type_1_diabetes', 'eq', True)
has_type_2_diabetes_on_insulin = NonLimitingRule('has_type_2_diabetes_on_insulin', 'eq', True)

# %% ../../conditions/hfref.ipynb 22
class SGLT2iTitrator(Titrator):
    dosing_ladder = sglt2i_ladder
    rules = [
        low_egfr,
        severe_gu_infxns,
        has_type_1_diabetes,
        has_type_2_diabetes_on_insulin,
    ]

# %% ../../conditions/hfref.ipynb 30
mra_class = MedicationClass("MRA")

spironolactone = Ingredient("spironolactone", mra_class)
eplerenone = Ingredient("eplerenone", mra_class)

mra_ladder = DosingLadder({
    spironolactone.name: [
        Medication(spironolactone, "12.5 mg", "PO", "daily"),
        Medication(spironolactone, "25 mg", "PO", "daily"),
    ],
    eplerenone.name: [
        Medication(eplerenone, "12.5 mg", "PO", "daily"),
        Medication(eplerenone, "25 mg", "PO", "daily"),
    ],
})

# %% ../../conditions/hfref.ipynb 34
class MRATitrator(Titrator):
    dosing_ladder = mra_ladder
    rules = [
        low_egfr,
        hyperkalemia,
        # TODO
    ]
